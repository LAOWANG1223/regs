####################################################################################################################
#        ID007 （ID006的明细）     
####################################################################################################################
#先更新issueListConsiderDelayPointsDeduction中日期

select 
cwd_user.display_name,issue_body.assignee as TeamMember,
issue_body.*
	 	 from issueListConsiderDelayPointsDeduction issue_body
		 left join cwd_user on cwd_user.user_name  = issue_body.assignee
	where 
issue_body.issue_doneDate > '2019/6/1' and issue_body.issue_doneDate < '2019/7/1'



#################################################################################################################
##                              
####################################################################################################################
#        ID006 考虑了延误的扣除的队员汇总  （基于ID005）  
#              1. 实际完成时间在当月
#	       2. 预估人天若超过实际录入的20%，则以实际录入人天作为预估人天。
#              3. 基础积分 = 复杂度 * 预估人天,需要更新;基础积分 = 复杂度系数 * 预估人天 ,复杂度系数, 紧急1.5,高1.2，中1，低0.8, 无关紧要0.5
#		4. 延误扣减积分，超过整体工期的 30 %以下则扣减 30 %， 60 %以下则扣减 60 %，超过 60 %扣减 100 %    
####################################################################################################################
#先更新视图中的中的日期，积分和工时都没有的人不会出现
select * from teampointsview20190603 


alter view teampointsview20190603 as
select 
#延误扣除后的积分
cwd_user.display_name,issue_body.assignee as TeamMember
,1000*sum(
(case when datediff(issue_body.duedate,issue_body.issue_doneDate) >= 0 
            then est_adjust_points*complex_rate
       when datediff(issue_body.duedate,issue_body.issue_doneDate) < 0 
            and ABS(datediff(issue_body.duedate,issue_body.issue_doneDate)) <= datediff(issue_body.duedate,issue_body.issue_createdate)*0.3
			 			then est_adjust_points*0.7*complex_rate
	     when datediff(issue_body.duedate,issue_body.issue_doneDate) < 0 
            and ABS(datediff(issue_body.duedate,issue_body.issue_doneDate)) <= datediff(issue_body.duedate,issue_body.issue_createdate)*0.6
			 			then est_adjust_points*0.4*complex_rate
	 else 0 end)
) Points
,sum(issue_body.issue_worklog) worklog
	 	 from cwd_user
		 left join issueListConsiderDelayPointsDeduction issue_body on cwd_user.user_name  = issue_body.assignee
	where 
	#完成时间
issue_body.issue_doneDate > '2019/6/1' and issue_body.issue_doneDate < '2019/7/1'
group by cwd_user.display_name,issue_body.assignee

####################################################################################################################
#        ID005月度的绩效积分包含如下： 
#              1. 实际完成时间在当月
#	       2. 预估人天若超过实际录入的20%，则以实际录入人天作为预估人天。
#              3. 基础积分 = 复杂度 * 预估人天 ,基础积分 = 复杂度系数 * 预估人天 ,复杂度系数, 紧急1.5,高1.2，中1，低0.8, 无关紧要0.5
####################################################################################################################
alter view issueListConsiderDelayPointsDeduction as
SELECT issuewithcomplexfield.customvalue,
concat( pro.pkey, "-", issue_body.issuenum ) JIRA_KEY,issue_body.recordworklog/3600/8,issue_body.TIMEORIGINALESTIMATE/3600/8,issue_body.id jira_id,issue_body.assignee,cwd_user.display_name Doneupdateby,
issue_body.CREATED issue_createdate,
change_group.created issue_doneDate
,issue_body.duedate
#录入工时
,issue_body.recordworklog/3600/8 as issue_worklog
,issue_body.TIMEORIGINALESTIMATE
,issue_body.TIMEORIGINALESTIMATE/issue_body.recordworklog as overestimatedper
#原始预估人天
,issue_body.TIMEORIGINALESTIMATE/3600/8 ori_points
,priority
#复杂度系数
,(case issuewithcomplexfield.customvalue
      when '极难' then 1.5
      when '难' then 1.2
			when '正常' then 1
			when '简单' then 0.8
			when '很简单' then 0.5
			else 1
			end) as complex_rate
,(case when issue_body.TIMEORIGINALESTIMATE/issue_body.recordworklog > 1.2
            then issue_body.recordworklog/3600/8
						else TIMEORIGINALESTIMATE/3600/8 end) as est_adjust_points
#延误天数，小于0代表延误
,datediff(issue_body.duedate,change_group.created) delay
#工期
,datediff(issue_body.duedate,issue_body.CREATED) project_duration

FROM
	jiraissuewithworklog issue_body
	LEFT JOIN project pro ON issue_body.project = pro.id 
#	left join changegroup change_group on issue_body.id = change_group.issueid
# left join changeitem change_item on change_item.groupid = change_group.id
  left join lastestDoneDateOfissues change_group on issue_body.id = change_group.issueid
	left join cwd_user on cwd_user.user_name = change_group.author
	#获取复杂度字段
	left join findCustomComplexFieldIssue issuewithcomplexfield on issue_body.id = issuewithcomplexfield.id 
where 
  #当前已经是完成状态'Done','Resolved','Closed'
	issue_body.issuestatus  in (10001,5,6)
	#实际完成时间在当月
  #and change_item.field = 'status' and change_item.newstring in ('Done','Resolved','Closed')
	#有工时录入
	and issue_body.recordworklog>0
	#完成时间
	#and `change_group`.`created` > '2019/6/1' and `change_group`.`created` < '2019/7/1'
	#and concat( pro.pkey, "-", issue_body.issuenum ) = 'RP-178'
#and assignee = 'aiker'

###查找“实现复杂度”自定义字段有值的issue
create view findCustomComplexFieldIssue as
select issue_body.id,cf_option.customvalue from jiraissue issue_body
  left join customfieldvalue cf_value on issue_body.id = cf_value.issue 
  left join customfield cf_field on cf_field.id = cf_value.customfield 
  left join customfieldoption cf_option on cf_option.id = cf_value.STRINGVALUE
	where cf_field.cfname = '实现复杂度' 

#获取最近一次的点击“完成”的时间
create view lastestDoneDateOfissues as
 select issueid,author,Max(change_group.created) created from  
   changegroup change_group 
  left join changeitem change_item on change_item.groupid = change_group.id
	where 
	#实际完成时间在当月
  change_item.field = 'status' and change_item.newstring in ('Done','Resolved','Closed')
	#and issueid=18766
	group by issueid,author

###############################################################################################################
#####                              ID001 : 信息部绩效积分工具(注意先更新视图和任务语句的时间)     老板版本      #######
###############################################################################################################
select * from 2019MayTeamPointsView order by points desc
#注意先更新积分日期

alter view 2019mayteampointswithoutnameview as
select `issue_body`.`ASSIGNEE` AS `TeamMember`,sum(((`issue_body`.`TIMEORIGINALESTIMATE` / 3600) / 8))*1000 AS `Points`,sum(((`issue_body`.`RecordWorklog` / 3600) / 8)) AS `worklog` from `jiraissuewithworklog` `issue_body` where ((`issue_body`.`actual_status` in ('Done','Resolved','Closed')) and (`issue_body`.`RecordWorklog` > 0) and (`issue_body`.`DUEDATE` > '2019-05-01') and (`issue_body`.`DUEDATE` < '2019-06-01')) group by `issue_body`.`ASSIGNEE`

##############                      积分任务列表                        ####################
select concat(issue_body.project_key_value,"-",issue_body.issuenum) AS Jira_Key ,issue_body.ASSIGNEE,issue_body.*
from JiraIssueWithWorklog issue_body
where issue_body.actual_status in ("Done","Resolved","Closed") #状态是完成
  and issue_body.recordworklog > 0 #有实际工时录入
and issue_body.duedate > "2019-05-01" and issue_body.duedate <"2019-06-01"#
#任务,开发子任务,测试任务,测试子任务
and `issue_body`.`issuetype` in ('10301','10302','10503','10504')
##############                      团队平均的积分                        ####################
select "ITHO Team except top mgr" as Team, Team_Average_View.Team_Average averagePoints from Team_Average_View
union
select "Developer" as Team,IT_Team_Average_View.IT_Team_Average averagePoints from IT_Team_Average_View
union
select "ProductManager" as Team, PM_Team_Average_View.* from PM_Team_Average_View
union
select "UI Team" as Team,  UI_Team_Average_View.* from UI_Team_Average_View
union
select "UED Team" as Team,  UED_Team_Average_View.* from UED_Team_Average_View
union
select "Tester" as Team, TEST_Team_Average_View.* from TEST_Team_Average_View
union
select "Logistic Team Developer" as Team,  Logistic_Team_Average_View.* from Logistic_Team_Average_View
union
select "Trade Team Developer" as Team,  Trade_Team_Average_View.* from Trade_Team_Average_View
union
select "Platform Team Developer" as Team,  Platform_Team_Average_View.* from Platform_Team_Average_View
union
select "Operation Team" as Team,  Operation_Team_Average_View.* from Operation_Team_Average_View

##############             每个人的积分 （主管为团队的1.5倍数）                       ####################
select * from 2019MayTeamPointsView a where a.`trim(cwd_user.display_name)` not in ('高卫卫','程龙','吴涛','程光','何有君','王宇峰','程龙') 
union
select '程龙' as display_name,"技术总监" as teammember,it_Team_Average*1.5 as points,"无统计" as worklog from it_Team_Average_view
union
select '何有君' as display_name,"货代贸易技术主管" as teammember,Trade_Team_Average*1.5 as leader_points,"无统计" as worklog from trade_team_average_view
union
select '高卫卫' as display_name,"物流技术主管" as teammember,logistic_Team_Average*1.5 as leader_points,"无统计" as worklog from logistic_team_average_view
union
select '吴涛' as display_name,"职能技术主管"  as teammember,platform_Team_Average*1.5 as leader_points,"无统计" as worklog from platform_Team_Average_view
union
select '程光' as display_name,"测试主管"  as teammember,test_Team_Average*1.5 as leader_points,"无统计" as worklog from test_Team_Average_view
union
select '王宇峰' as display_name,"产品总监"  as teammember,pm_Team_Average*1.5 as leader_points,"无统计" as worklog from pm_Team_Average_view
union
select '王宇峰' as display_name,"信息部负责人"  as teammember,Team_Average*1.5 as leader_points,"无统计" as worklog from Team_Average_view
union
select 'NA' as display_name,"运维主管"  as teammember,operation_Team_Average*1.5 as leader_points,"无统计" as worklog from operation_Team_Average_view

###########################################################################################################
#####      ID002   统计故事/任务/维护的总积分和成本 (更新jira_key查询)                                #####
#####              (注意:可以根据条件选择是否统计故障和bug)                                                       #####         
###########################################################################################################

select jira_key,a.SUMMARY,body_issue_type, body_issue_status,TASK_JIRA_KEY,task_summary,task_issue_type,task_issue_status,task_assignee,sum(task_estimation)/3600/8 points,sum(issuelogwork)/3600/8 workday from 
(

			select POINT_TASK.summary,POINT_TASK.JIRA_KEY,POINT_TASK.TASK_JIRA_KEY,POINT_TASK.TASK_ID,task_estimation,task_issue_type,POINT_TASK.issuestatus task_issue_status,b_issuestatus body_issue_status,issueidwithworklog.issueLogWork,task_summary,task_assignee,body_issue_type from 
			(
			select concat(pro.pkey,"-",issue_body.issuenum) JIRA_KEY, concat(task_pro.pkey,"-",task_issue.issuenum) TASK_JIRA_KEY, 
			issue_link.SOURCE TASK_ID,task_issue.TIMEORIGINALESTIMATE task_estimation, task_issue.issuetype task_issue_type,
			task_issue.issuestatus,issue_body.issuestatus b_issuestatus,issue_body.summary
			,task_issue.SUMMARY task_summary, task_issue.ASSIGNEE task_assignee,issue_body.issuetype body_issue_type
			from  jiraissue issue_body
			left join project pro
			on issue_body.project = pro.id 
			left join issuelink issue_link
			on issue_link.DESTINATION = issue_body.id 
			left join jiraissue task_issue
			on task_issue.id = issue_link.SOURCE
			left join project task_pro
			on task_issue.project = task_pro.id 
			) POINT_TASK
			left join issueidwithworklog
			on issueidwithworklog.issueid = POINT_TASK.TASK_ID
			union all
			select POINT_TASK.summary,POINT_TASK.JIRA_KEY,POINT_TASK.TASK_JIRA_KEY,POINT_TASK.TASK_ID,task_estimation,task_issue_type,POINT_TASK.issuestatus task_issue_status,b_issuestatus body_issue_status,issueidwithworklog.issueLogWork,task_summary,task_assignee,body_issue_type from 
			(
			select concat(pro.pkey,"-",issue_body.issuenum) JIRA_KEY, concat(task_pro.pkey,"-",task_issue.issuenum) TASK_JIRA_KEY, 
						#issue_link.SOURCE TASK_ID,
						issue_link.DESTINATION TASK_ID,task_issue.TIMEORIGINALESTIMATE task_estimation,task_issue.issuetype   task_issue_type,issue_body.SUMMARY,
						task_issue.issuestatus,issue_body.issuestatus b_issuestatus 
						,task_issue.SUMMARY task_summary, task_issue.ASSIGNEE task_assignee,issue_body.issuetype body_issue_type
						from  jiraissue issue_body
						left join project pro
						on issue_body.project = pro.id 
						left join issuelink issue_link
						on issue_link.source= issue_body.id
						left join jiraissue task_issue
						on task_issue.id = issue_link.DESTINATION
						left join project task_pro
						on task_issue.project = task_pro.id 
			) POINT_TASK
			left join issueidwithworklog
			on issueidwithworklog.issueid = POINT_TASK.TASK_ID
			#where issueidwithworklog.issueLogWork is not null
) a
#不计算故障任务的积分和工时
where a.task_issue_type not in (10500,10600) 
#统计已经完成的任务
#and a.task_issue_status in (10001,5,6)
#可以按照故事，链接任务等灵活分组
group by a.jira_key, a.SUMMARY, body_issue_type,body_issue_status,TASK_JIRA_KEY,task_issue_type,task_assignee,task_summary 
having a.JIRA_KEY in 
#仓单功能
('TMSI-2140','TMSI-2811','TMSI-3291','TMSI-3686')
#核注请单
#('TMSI-3290','TMSI-2627','TMSI-2898','TMSI-3685')

select * from issuestatus
# 10001 done,5 resolved, 6 closed


###########################################################################################################
#####                      ID004 检查非主管改动的到期日和积分的情况                                        #####
###########################################################################################################
SELECT
concat( pro.pkey, "-", issue_body.issuenum ) JIRA_KEY,cwd_user.display_name updateby,change_group.created updateDate,
change_item.*
FROM
	jiraissue issue_body
	LEFT JOIN project pro ON issue_body.project = pro.id 
	left join changegroup change_group on issue_body.id = change_group.issueid
  left join changeitem change_item on change_item.groupid = change_group.id
	left join cwd_user on cwd_user.user_name = change_group.author
where 
  #预估人天和到期日
  change_item.field in ('timeoriginalestimate','duedate')
	#非主管
  and cwd_user.display_name not in ('王宇峰','程龙','程光','高卫卫','吴涛','何有君') 
	#发生变更的时间
	and change_group.created > '2019/5/1'
	#and concat( pro.pkey, "-", issue_body.issuenum ) = 'TMSI-4006'


###########################################################################################################
#####                                       ID003 基础内容搭建                                        #####
###########################################################################################################


#####################         平均积分 视图创建 #####################################
#信息部全体(除管理2人，交互，视觉，运维)
alter view Team_Average_View as
select AVG(Points) as Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   物流团队
"wind","shaynegao","sheny","titihou","damonwang","hangwang","nicolasni","shouwencai","jasonyuan",
#   贸易报关团队"
"jason.chen","hyj","coy","alisali","aiker","anniewu","edenma",
#   职能团队 
"ying","lynen","gray","smile.yin","puyu","loriye","cedarzhong","billowwu","徐善芹",
# 测试团队 
"lisa","tonya","wenguangyan","keke.shu","alice.li","elizacheng",
#   产品经理
"cindy","anne","code","juan","xiang","jacky","elsa","georgexie","ashley",
#   交互设计 
"baku","allen.chen",
#   视觉设计
"jack.zhu","kiki.ding",
#   业务专家 
"william",
# 运维团队 
"koala","dream","paulhu"
)


#IT_Team_Average
create view IT_Team_Average_View as
select AVG(Points) as IT_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   物流团队
"wind","shaynegao","sheny","titihou","damonwang","hangwang","nicolasni","shouwencai","jasonyuan",
#   贸易报关团队"
"jason.chen","hyj","coy","alisali","aiker","anniewu","edenma",
#   职能团队 
"ying","lynen","gray","smile.yin","puyu","loriye","cedarzhong","billowwu","徐善芹"
)

#PM_Team_Average
create view PM_Team_Average_View as 
select AVG(Points) as PM_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   产品经理
"cindy","anne","code","juan","xiang","jacky","elsa","georgexie","ashley"
)

#TEST_Team_Average_View
create view TEST_Team_Average_View as 
select AVG(Points) as TEST_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
# 测试团队 
"lisa","tonya","wenguangyan","keke.shu","alice.li","elizacheng"
)
#Logistic_Team_Average_View
create view Logistic_Team_Average_View as 
select AVG(Points) as Logistic_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   物流团队
"wind","shaynegao","sheny","titihou","damonwang","hangwang","nicolasni","shouwencai","jasonyuan"
)

select* from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   物流团队
"wind","shaynegao","sheny","titihou","damonwang","hangwang","nicolasni","shouwencai","jasonyuan"
)


#Trade_Team_Average_View
create view Trade_Team_Average_View as 
select AVG(Points) as Trade_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   贸易报关团队
"jason.chen","hyj","coy","alisali","aiker","anniewu","edenma"
)
#Platform_Team_Average_View
create view Platform_Team_Average_View as 
select AVG(Points) as Platform_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   职能团队 
"ying","lynen","gray","smile.yin","puyu","loriye","cedarzhong","billowwu","徐善芹"
)

#Operation_Team_Average_View
create view Operation_Team_Average_View as 
select AVG(Points) as Operation_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
# 运维团队 
"koala","dream","paulhu"
)

#UI_Team_Average_View
create view UI_Team_Average_View as 
select AVG(Points) as UI_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   视觉设计
"jack.zhu","kiki.ding"
)

#UED_Team_Average_View
create view UED_Team_Average_View as 
select AVG(Points) as UED_Team_Average from 2019MayTeamPointsWithoutNameView tv
where tv.TeamMember in
(
#   交互设计 
"baku","allen.chen"
)



select * from 2019MayTeamPointsView

#####################队员积分排名(视图简化版)#########
alter VIEW 2019MayTeamPointsView as
select trim(cwd_user.display_name),point_res.* from cwd_user 
left join
2019MayTeamPointsWithoutNameView point_res
on point_res.teamMember = cwd_user.user_name
where cwd_user.user_name in (
#   物流团队
"wind","shaynegao","sheny","titihou","damonwang","hangwang","nicolasni","shouwencai","jasonyuan",
#   贸易报关团队"
"jason.chen","hyj","coy","alisali","aiker","anniewu","edenma",
#   职能团队 
"ying","lynen","gray","smile.yin","puyu","loriye","cedarzhong","billowwu","徐善芹",
# 测试团队 
"lisa","tonya","wenguangyan","keke.shu","alice.li","elizacheng",
#   产品经理
"cindy","anne","code","juan","xiang","jacky","elsa","georgexie","ashley",
#   交互设计 
"baku","allen.chen",
#   视觉设计
"jack.zhu","kiki.ding",
#   业务专家 
"william",
# 运维团队 
"koala","dream","paulhu",
# 管理
"wangyufeng","jackie"
)


select * from cwd_user order by id 



#####################查看积分任务明细(视图简化版)#####################
select concat(issue_body.project_key_value,"-",issue_body.issuenum) AS Jira_Key ,issue_body.ASSIGNEE,issue_body.*
from JiraIssueWithWorklog issue_body
where issue_body.actual_status in ("Done","Resolved","Closed") #状态是完成
  and issue_body.recordworklog > 0 #有实际工时录入
	and issue_body.duedate > "2019-05-01" and issue_body.duedate <"2019-06-01"#计划完成时间是当月
	
	
	
	
	
	
select * from JiraIssueWithWorklog

#完整的积分详细视图
ALTER VIEW JiraIssueWithWorklog as
select issue_work_log.issueLogWork RecordWorklog,issue_status.pname actual_status,jira_project.pkey project_key_value, issue_body.*
from jiraissue issue_body
left join 
issueIDwithWorklog issue_work_log on issue_body.ID = issue_work_log.issueid
left join issuestatus issue_status on issue_body.issuestatus=issue_status.ID
left join project jira_project on jira_project.id = issue_body.project

#issue的工时录入视图
create VIEW issueIDwithWorklog as
select 
work_log.issueid,sum(work_log.timeworked) issueLogWork
from worklog work_log 
group by work_log.issueid

#####################队员积分排名#####################
select count(teamissue.points) teamAveragePoints from
(
select issue_body.assignee TeamMember , sum(TIMEORIGINALESTIMATE/3600/8) as Points ,issue_work_log.issueLogWork RecordWorklog,issue_status.pname actual_status, issue_body.*
from jiraissue issue_body
left join 
(select 
work_log.issueid,sum(work_log.timeworked) issueLogWork
from worklog work_log 
group by work_log.issueid) issue_work_log on issue_body.ID = issue_work_log.issueid
left join issuestatus issue_status on issue_body.issuestatus=issue_status.ID 
where issue_status.pname in ("Done","Resolved","Closed") #状态是完成
  and issue_work_log.issueLogWork > 0 #有实际工时录入
	and issue_body.duedate > "2019-04-01" and issue_body.duedate <"2019-05-01"#计划完成时间是当月
	#技术团队
	#and issue_body.assignee in ("jason.chen","hyj","coy","ying","lynen","wind","gray","shaynegao","smile.yin","alisali","sheny","titihou","aiker","puyu","loriye","damonwang","anniewu","hangwang","nicolasni","shouwencai","cedarzhong","billowwu","edenma")
	#   产品经理
	#and issue_body.assignee in ("cindy","anne","code","juan","xiang","jacky","elsa","georgexie","ashley")
	group by issue_body.assignee
	order by Points desc
) teamissue

#####################查看积分明细(任务)#####################
select count(*) from
(
select concat(jira_project.pkey,"-",issue_body.issuenum) AS Jira_Key, issue_body.SUMMARY,issue_body.ASSIGNEE,issue_body.DUEDATE,issue_body.CREATED,issue_body.UPDATED,issue_body.REPORTER,issue_body.CREATOR
from jiraissue issue_body
left join 
(select 
work_log.issueid,sum(work_log.timeworked) issueLogWork
from worklog work_log 
group by work_log.issueid) issue_work_log
on issue_body.ID = issue_work_log.issueid
left join issuestatus issue_status on issue_body.issuestatus=issue_status.ID 
left join project jira_project on jira_project.id = issue_body.project
where issue_status.pname in ("Done","Resolved","Closed") #状态是完成
	and issue_body.duedate > "2019-05-01" and issue_body.duedate <"2019-06-01"#计划完成时间是当月
	and issue_work_log.issueLogWork > 0#有实际工时录入
  #and issue_body.ASSIGNEE in () #筛选需要查看的人员
	#and concat(jira_project.pkey,"-",issue_body.issuenum) = "DEVS-1162" #筛选需要查看的tickt
) a
